# Generated by Django 5.2.6 on 2025-09-12 09:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('simulator', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GasNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='GasLib-40', max_length=100)),
                ('description', models.TextField(default='Gas network with 40 nodes and 45 arcs')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_id', models.CharField(max_length=50, unique=True)),
                ('node_type', models.CharField(choices=[('source', 'Gas Source'), ('sink', 'Gas Sink'), ('innode', 'Junction Node')], max_length=10)),
                ('alias', models.CharField(blank=True, max_length=100)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('geo_longitude', models.FloatField(blank=True, null=True)),
                ('geo_latitude', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(default=0.0)),
                ('pressure_min', models.FloatField(default=1.01325)),
                ('pressure_max', models.FloatField(default=81.01325)),
                ('current_pressure', models.FloatField(default=50.0)),
                ('flow_min', models.FloatField(default=0.0)),
                ('flow_max', models.FloatField(default=10000.0)),
                ('current_flow', models.FloatField(default=0.0)),
                ('gas_temperature', models.FloatField(default=20.0)),
                ('calorific_value', models.FloatField(default=36.4543670654)),
                ('norm_density', models.FloatField(default=0.785)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='simulator.gasnetwork')),
            ],
        ),
        migrations.CreateModel(
            name='Pipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipe_id', models.CharField(max_length=50, unique=True)),
                ('alias', models.CharField(blank=True, max_length=100)),
                ('length', models.FloatField(default=10.0)),
                ('diameter', models.FloatField(default=0.5)),
                ('roughness', models.FloatField(default=0.0001)),
                ('current_flow', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('from_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_pipes', to='simulator.node')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipes', to='simulator.gasnetwork')),
                ('to_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_pipes', to='simulator.node')),
            ],
        ),
        migrations.CreateModel(
            name='PLC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plc_id', models.CharField(max_length=50, unique=True)),
                ('plc_type', models.CharField(choices=[('PRESSURE_CONTROL', 'Pressure Control PLC'), ('FLOW_REGULATION', 'Flow Regulation PLC'), ('COMPRESSOR_MANAGEMENT', 'Compressor Management PLC'), ('VALVE_CONTROL', 'Valve Control PLC'), ('SAFETY_MONITORING', 'Safety Monitoring PLC'), ('LEAK_DETECTION', 'Leak Detection PLC'), ('TEMPERATURE_CONTROL', 'Temperature Control PLC'), ('EMERGENCY_SHUTDOWN', 'Emergency Shutdown PLC')], max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('scan_time', models.FloatField(default=0.1)),
                ('last_scan', models.DateTimeField(auto_now=True)),
                ('inputs', models.JSONField(blank=True, default=dict)),
                ('outputs', models.JSONField(blank=True, default=dict)),
                ('memory', models.JSONField(blank=True, default=dict)),
                ('timers', models.JSONField(blank=True, default=dict)),
                ('counters', models.JSONField(blank=True, default=dict)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plcs', to='simulator.node')),
            ],
        ),
        migrations.CreateModel(
            name='PLCAlarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarm_id', models.CharField(max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('acknowledged', models.BooleanField(default=False)),
                ('acknowledged_by', models.CharField(blank=True, max_length=100)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('plc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alarms', to='simulator.plc')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=50, unique=True)),
                ('sensor_type', models.CharField(choices=[('pressure', 'Pressure Sensor'), ('temperature', 'Temperature Sensor'), ('flow', 'Flow Rate Sensor')], max_length=20)),
                ('current_value', models.FloatField(default=0.0)),
                ('unit', models.CharField(default='', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('quality', models.CharField(default='GOOD', max_length=20)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('calibration_date', models.DateTimeField(auto_now_add=True)),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulator.node')),
                ('pipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulator.pipe')),
            ],
        ),
        migrations.CreateModel(
            name='SimulationRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(max_length=50, unique=True)),
                ('duration', models.IntegerField(default=600)),
                ('time_step', models.FloatField(default=1.0)),
                ('status', models.CharField(choices=[('CREATED', 'Created'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('STOPPED', 'Stopped')], default='CREATED', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_steps', models.IntegerField(default=0)),
                ('log_file_path', models.CharField(blank=True, max_length=512)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.gasnetwork')),
            ],
        ),
        migrations.AddField(
            model_name='run',
            name='simulation_run',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='simulator.simulationrun'),
        ),
        migrations.CreateModel(
            name='Valve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valve_id', models.CharField(max_length=50, unique=True)),
                ('valve_type', models.CharField(choices=[('CONTROL', 'Control Valve'), ('ISOLATION', 'Isolation Valve'), ('PRESSURE_RELIEF', 'Pressure Relief Valve'), ('CHECK', 'Check Valve')], max_length=20)),
                ('position', models.FloatField(default=50.0)),
                ('is_operational', models.BooleanField(default=True)),
                ('last_movement', models.DateTimeField(auto_now=True)),
                ('max_pressure', models.FloatField(default=100.0)),
                ('flow_coefficient', models.FloatField(default=1.0)),
                ('pipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valves', to='simulator.pipe')),
                ('plc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='simulator.plc')),
            ],
        ),
        migrations.CreateModel(
            name='SimulationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.FloatField()),
                ('sensor_data', models.JSONField(blank=True, default=dict)),
                ('plc_data', models.JSONField(blank=True, default=dict)),
                ('valve_data', models.JSONField(blank=True, default=dict)),
                ('node_data', models.JSONField(blank=True, default=dict)),
                ('pipe_data', models.JSONField(blank=True, default=dict)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_points', to='simulator.simulationrun')),
            ],
            options={
                'ordering': ['timestamp'],
                'unique_together': {('run', 'timestamp')},
            },
        ),
    ]
